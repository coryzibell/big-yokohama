{%- macro navigation(section, level, class) -%}
  {# This macro takes the section text for a structure section and recursively
  calls itself to spit out unordered lists of the child entries as links #}
  {% if level == NULL %}
  {% set level = 1 %}
  {% endif %}
  {% import _self as utilities %}
  {% set pages = craft.entries.section(section).level(level).all() %}
  {% if pages | length %}
  <ul>
    {% for page in pages %}
      {% if class != null %}
        {% set classNested = class~"-level-"~level %}
      {% else %}
        {% set classNested = null %}
      {% endif %}
      {{ utilities.linkBlock(page.linkObject, page.title, classNested, 'li') | trim }}
      {{ utilities.navigation(section, level+1, class) | trim }}
      </li>
    {% endfor %}
  </ul>
  {% endif %}
{% endmacro %}

{% macro linkBlock(link, text, class, parentElement) %}
  {% import _self as utilities %}
  {% if parentElement != null %}<{{ parentElement }}
  {{ utilities.dataAttributes(link.linkDataAttributes) }}
  {% if class != NULL %} class="{{ class }}"{% endif %}>{% endif %}
  {% if link.linkContent | length %}
  {% for block in link.linkContent %}
    <a href="{{ utilities.linkTag(block) }}"
    {% if parentElement == null %}
    {{ utilities.dataAttributes(link.linkDataAttributes) }}
    {% if class != NULL %} class="{{ class }}"{% endif %}
    {% endif %}>
    {{ text }}
    </a>
  {% endfor %}
  {% else %}{{ text }}
  {% endif %}
{% endmacro %}

{% macro elementComposer(element, attributes, inner, variables) %}
  <{{ element }}{% for attribute in attributes %}{{ attribute }}="{{ value }}"{% endfor %}>
      {{ include(template_from_string(inner)) }}
  </{{ element }}>
{% endmacro %}

{% macro linkTag(block) %}
  {% switch block.type %}
  {% case 'entry' %}{{ block.entry.one().getUrl() }}
  {% case 'asset' %}{{ block.asset.one().getUrl() }}
  {% case 'externalLink' %}{{ block.protocol }}{{ block.path }}
  {% case 'internalLink' %}{{ block.path }}
  {% endswitch %}
{% endmacro %}

{% macro dataAttributes(dataAttributes) %}
  {% if dataAttributes | length %}
      {% for block in dataAttributes %}
      {% if block.attribute %}{{ block.attribute }}="{{ block.value }}"{% endif %}
      {% endfor %}
  {% endif %}
{% endmacro %}